#include "GoofBot.h"
#include "goofgamestate.h"
#include "DecisionMaker/decisionmaker.h"
#include <iostream>

const std::string GoofBot::m_name = "GoofBot";

// m_icon should be a base64 string representing a 32x32pixel PNG-image
// you can convert your 32x32pixel PNG-image here: http://www.base64-image.de/
//const std::string GoofBot::m_icon = "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";
const std::string GoofBot::m_icon = "iVBORw0KGgoAAAANSUhEUgAABLAAAAMgAgMAAABOjnORAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAADFBMVEVttm0kkiQAgAD///8oIYpcAAAAAnRSTlPHx/co26IAAAABYktHRAMRDEzyAAAAB3RJTUUH4QgJCx8HA98SEAAAA+1JREFUeNrt0DEBADAMA6CanMma7CwkP0hgltgokCVLlixZshTIkiVLlixZCmTJkiVLliwFsmTJkiVLlgJZsmTJkiVLgSxZsmTJkqVAlixZsmTJUiBLlixZsmQpkCVLlixZshTIkiVLlixZCmTJkiVLliwFsmTJkiVLlgJZsmTJkiVLgSxZsmTJkqVAlixZsmTJUiBLlixZsmQpkCVLlixZshTIkiVLlixZCmTJkiVLliwFsmTJkiVLlgJZsmTJkiVLgSxZsmTJkqVAlixZsmTJUiBLlixZsmQpkCVLlixZshTIkiVLlixZCmTJkiVLliwFsmTJkiVLlgJZsmTJkiVLgSxZsmTJkqVAlixZsmTJUiBLlixZsmQpkCVLlixZshTIkiVLlixZCmTJkiVLliwFsmTJkiVLlgJZsmTJkiVLgSxZsmTJkqVAlixZsmTJUiBLlixZsmQpkCVLlixZshTIkiVLlixZCmTJkiVLliwFsmTJkiVLloIii8IRkyVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQJUuWLFmykCVLlixZspAlS5YsWbKQ1WQ9YrPEZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkyZIlS5YsZMmSJUuWLGTJkiVLlixkFT6XSQ7AwY6f/wAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNy0wOC0wOVQxMTozMTowNyswMDowMDhkeZYAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTctMDgtMDlUMTE6MzE6MDcrMDA6MDBJOcEqAAAAAElFTkSuQmCC";


// weird did I accidentally delete the constructor?
GoofBot::GoofBot()
{
}


GoofBot::~GoofBot()
{
}


const std::string& GoofBot::GetName()
{
    return m_name;
}

const std::string& GoofBot::GetIcon()
{
    return m_icon;
}


// Main decision maker
ActionType GoofBot::GetAction(const GameStateContainer& container)
{
    ActionType selectedAction;
    try{
        // Convert gamestatecontainer to my own gamestate
        // GoofGameState contains a throw
        GoofGameState myGameState = GoofGameState(container, m_name);// retrieve data from container myGameState

        // Initialize decision maker
        DecisionMaker DC = DecisionMaker(myGameState);

        // select an action
        selectedAction = DC.getAction();
    }
    catch(const std::exception& e) {
        std::cout << e.what() << std::endl;
        selectedAction =  ActionType::Hold;
    }

    // send action back to main.cpp
    return selectedAction;
}





